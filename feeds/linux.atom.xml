<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Skydark's blog</title><link href="http://blog.skydark.info/" rel="alternate"></link><link href="http://blog.skydark.info/feeds/linux.atom.xml" rel="self"></link><id>http://blog.skydark.info/</id><updated>2013-06-04T00:00:00+08:00</updated><entry><title>将终端嵌入桌面</title><link href="http://blog.skydark.info/linux/2013/06/04/embed-terminal/" rel="alternate"></link><published>2013-06-04T00:00:00+08:00</published><author><name>Skydark Chen</name></author><id>tag:blog.skydark.info,2013-06-04:linux/2013/06/04/embed-terminal/</id><summary type="html">&lt;p&gt;如题，效果如图:&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/misc/embedterm.jpg" alt="嵌入终端截图"&gt;&lt;/p&gt;
&lt;p&gt;类似的文章其实很多，无非是:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;隐藏标题栏/菜单栏/滚动条/……;&lt;/li&gt;
&lt;li&gt;利用终端自己/窗口管理器/其他工具(Devil's Pie, transset-df, etc.)等将终端设置上最大化透明置底不在任务栏显示等等属性;&lt;/li&gt;
&lt;li&gt;加入自启动。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;思路还是很清晰的。&lt;/p&gt;
&lt;p&gt;不过这些文章几乎都没有提及一个问题——当使用“&lt;em&gt;切换桌面显示&lt;/em&gt;”的时候，这个所谓嵌入桌面的终端也会被最小化。
而事实上，这是嵌入桌面的终端最有可能被使用的情景。&lt;/p&gt;
&lt;p&gt;可能的解决方案有两个：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;将“隐藏桌面”的快捷键绑定到另一个脚本上，这个脚本在完成原本的隐藏桌面的任务后随即还原桌面上的终端。
可以使用&lt;code&gt;wmctrl&lt;/code&gt;完成这系列任务，难度不大。
主要的问题是，原先“显示/隐藏桌面”的快捷键只要按两次就会恢复窗口原来的布局，而现在这个效果就无法保持了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使得终端真正“显示在桌面”。类似&lt;code&gt;conky&lt;/code&gt;和&lt;code&gt;wbar&lt;/code&gt;等软件的效果。需要提示窗口管理器这个窗口的type是desktop.
但使用&lt;code&gt;xprop/wmctrl/devilspie&lt;/code&gt;等完全没有效果。
&lt;a href="https://bbs.archlinux.org/viewtopic.php?pid=865844"&gt;这个帖子&lt;/a&gt;的7楼说明了原因：
这个hint要在窗口实际映射前设定好，如果等终端程序已经就绪窗口已经完成了再去提示窗口管理器，窗口管理器是可以无视的——openbox就是这么做的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;也就是说，如果希望终端程序和&lt;code&gt;conky&lt;/code&gt;一样真正嵌入桌面，只能通过修改终端的源代码实现了。
该帖子里给了修改&lt;code&gt;urxvt&lt;/code&gt;的方法，我照葫芦画瓢也修改了&lt;code&gt;terminator&lt;/code&gt;，选择这个终端的原因是它不是我平时用的终端，而且功能非常丰富。最终效果如文首图，还是不错的。&lt;/p&gt;
&lt;p&gt;修改的时候就是将&lt;code&gt;terminatorlib/window.py&lt;/code&gt;里&lt;code&gt;Window&lt;/code&gt;类的&lt;code&gt;show&lt;/code&gt;方法开头添加如下代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;startup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;present&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;property_change&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gdk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;atom_intern&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;_NET_WM_WINDOW_TYPE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gdk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;atom_intern&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ATOM&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gdk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PROP_MODE_REPLACE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gdk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;atom_intern&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;_NET_WM_WINDOW_TYPE_DESKTOP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然要注意的是这样修改后就要求终端运行时就已经设定好了geometry，最大化那些hint也没有效果了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;最后得说的是，很多推荐嵌入桌面终端的文章推荐&lt;code&gt;tilda/guake/yaguake&lt;/code&gt;等。但其实这几个终端最适合的使用方式是用快捷键随叫随到。
终端嵌入桌面更多是求一个气氛和极客味道(黑色壁纸更佳)，相比之下，快捷键唤出终端的实用意义才要更大一些。&lt;/p&gt;
</summary><category term="linux"></category><category term="shell"></category></entry><entry><title>升级64位Arch</title><link href="http://blog.skydark.info/linux/2012/04/26/arch-64-bit/" rel="alternate"></link><published>2012-04-26T00:00:00+08:00</published><author><name>Skydark Chen</name></author><id>tag:blog.skydark.info,2012-04-26:linux/2012/04/26/arch-64-bit/</id><summary type="html">&lt;p&gt;上次 &lt;code&gt;pacman -Syu&lt;/code&gt; 后出现了奇怪的现象，系统会不定时的突然死掉，
表现为突然程序一个接一个的崩掉，几秒钟后键盘鼠标也崩掉，只能电源键了……&lt;/p&gt;
&lt;p&gt;然后查了 message.log, 提示是 &lt;em&gt;Memory Out&lt;/em&gt;, 我当时狂汗不已，机子内存4G，32位PAE，我记得死机前内存占用都是不到1.5G的……&lt;/p&gt;
&lt;p&gt;最后看 &lt;code&gt;free -l&lt;/code&gt;，猜测是因为我的Low Memory只有不到900M，
然后不知为何 update 后 Firefox 开始吃 Low Memory，最后 &lt;a href="http://www.redhat.com/archives/taroon-list/2007-August/msg00006.html"&gt;oom-killer&lt;/a&gt; 开始大杀特杀:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;When low memory is exhausted, it doesn't matter how much high memory is
available, the oom-killer will begin whacking processes to keep the
server alive.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最后想了想，还是直接升级64位系统好了:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;If possible, upgrade to 64-bit Linux.  This is the best solution because
&lt;em&gt;all&lt;/em&gt; memory becomes low memory.  If you run out of low memory in this
case, then you're &lt;em&gt;really&lt;/em&gt; out of memory. ;-)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;关于迁移到64位系统，照着&lt;a href="https://wiki.archlinux.org/index.php/Migrating_Between_Architectures_Without_Reinstalling_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29#.E6.96.B9.E6.B3.95_2:_.E4.BB.8E.E6.AD.A3.E5.9C.A8.E8.BF.90.E8.A1.8C.E7.9A.84.E7.B3.BB.E7.BB.9F"&gt;Archlinux Wiki&lt;/a&gt;做：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;确认 CPU 支持64位，确认 &lt;code&gt;/var/cache/pacman/pkg&lt;/code&gt; 空间足够。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;保留旧软件包以备回退，并准备好32位的 busybox:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; # pacman -Sw $(comm -23 &amp;lt;(pacman -Qq) &amp;lt;(pacman -Qmq))
 # pacman -S busybox&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;改变 pacman 架构:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; # sed -i -e s/'Architecture = auto'/'Architecture = x86_64'/g /etc/pacman.conf #并确认 mirrorlist 中使用 $arch 而不是 i686 指定架构
 # pacman -Syy&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下载新软件包:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; # pacman -Sw $(pacman -Qq|sed '/^lib32-/ d')&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装64位内核和32位glibc兼容:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; # pacman -S linux
 # pacman -Sf lib32-glibc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启检查是否安装64位内核成功:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; $ uname -m
 x86_64&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;64位内核可以运行32位程序，因此系统看起来很正常。
 但是当更新 x86_64 仓库中的软件的时候会出问题，因此要将现有的软件都替换为64位版本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装64位pacman:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; # pactree -l pacman | pacman -S -&lt;/code&gt;&lt;/pre&gt;
&lt;div class="alert alert-danger"&gt;
 &lt;strong&gt;注意这条命令执行完后整个系统就只有 bash、pacman 和 busybox 可以用了，下面的操作必须一气呵成不能中断！&lt;/strong&gt;
 &lt;/div&gt;&lt;p&gt;另外如果有人是对照这个文章/wiki原文进行迁移的，&lt;em&gt;请看完再动手!&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装其他软件包:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; # pacman -S $(pacman -Qq)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在我这边这里出了意外，因为 &lt;code&gt;pacman -Qq&lt;/code&gt; 会将 aur 里的软件包也列出来，这些在 &lt;code&gt;pacman -S&lt;/code&gt; 的时候显然会引发找不到错误。
 于是我很正常的想用输出重定向到文件，然后编辑文件删掉多余包的办法——&lt;em&gt;然而现在vi已经不可用了&lt;/em&gt;。
 我还看过 wiki 里关于 Arch64 的&lt;a href="https://wiki.archlinux.org/index.php/Arch64_FAQ_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29"&gt;FAQ&lt;/a&gt;里面提到的一个&lt;a href="https://bbs.archlinux.org/viewtopic.php?id=64485"&gt;帖子&lt;/a&gt;，作者是这样做的:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; # pacman -Qqe | grep -vx "$(pacman -Qqm)" &amp;gt; /backup_dir/pacman.lst
 # pacman -Qqm &amp;gt; /backup_dir/aur.lst&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然而不幸的是&lt;em&gt;grep现在也不能用&lt;/em&gt;，所以我就用 busybox 代替 grep，发现 busybox 版的 grep 不支持 -x 参数……
 (P.S.: 我当时竟然只想到了用 busybox 替代 grep，没想到用 busybox 替代 vi, 也没有想到用 &lt;code&gt;/lib/ld-linux.so.2&lt;/code&gt; 执行，FML……)
 总之我也不知道我最后怎么得到了一个这样的 pacman.lst，总之得到了一个，于是我的杯具就是从这里上演的……因为这样得到的 &lt;code&gt;pacman.lst&lt;/code&gt; 实际上是有问题的，&lt;/p&gt;
&lt;div class="alert alert-danger"&gt;
 &lt;strong&gt;FAQ 里引用的那文的作者是重新装 Arch 64 然后恢复原有软件，我现在是更新系统现有的全部软件包，这两个是有差别的。&lt;/strong&gt;
 &lt;/div&gt;&lt;div class="alert alert-info"&gt;
 现在让我做的话，我会在步骤6之前就执行 &lt;code&gt;pacman -Qq | grep -vx "$(pacman -Qqm)" &amp;gt; pacman.lst&lt;/code&gt;, 然后这一步用 &lt;code&gt;pacman -S $(cat pacman.lst)&lt;/code&gt;.
 &lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;正常情况下这个时候重启就可以了。我因为上面所说的杯具，重启之后就 Kernel panic 了，
 提示 No init found，我一开始以为是 grub 配置错了，总之各种乱搞，最后发现 No init found 很有可能不是真的没有 init，而是 init 执行不起来……&lt;/p&gt;
&lt;p&gt;还好这个时候机器上还有个 Ubuntu 10.04 备用，试图 chroot，结果发现32位系统没法 chroot 到64位上……&lt;/p&gt;
&lt;p&gt;于是又赶紧下了一个64位的 ArchISO，grub 挂载进入 live 环境，chroot，发现 /usr/bin 下还有千余个32位程序，/usr/lib 下有万余个32位动态链接库(尽管算上了软链接)。
 然后试着 &lt;code&gt;pacman -S gtk&lt;/code&gt;，终于发现问题，底下依赖的动态链接库还是32位的，所以装不上，再对比 pacman.lst，终于发现步骤7里强调的那段。
 于是这次我是有正常的 vi 和 grep 的(退出 chroot 就有)，重新安装一次，终于成功了……&lt;/p&gt;
&lt;p&gt;另外不得不说 chroot 太方便了，和直接进了那个系统一样。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;重启后终于看到了 X，然后就是各种 yaourt，注意64位的 &lt;code&gt;/etc/makepkg.conf&lt;/code&gt; 和原来有所不同，应对照 &lt;code&gt;/etc/makepkg.conf.pacnew&lt;/code&gt; 修改，才能正常的用 yaourt 编译 aur 中的软件。&lt;/p&gt;
&lt;p&gt;flash 自动装好了，B站无压力。
rvm 里的 ruby 要重新编译一遍。
wine 抽搐了，我没有64位win7的dll，正打算回退到32位的wine上……&lt;/p&gt;
&lt;p&gt;总之这次迁移64位系统纠结了很久，结果发现是个好傻的问题，人生就是充满了233啊233……&lt;/p&gt;
&lt;p&gt;并特别感谢&lt;a href="https://plus.google.com/106325773445721438941"&gt;朱晋玄&lt;/a&gt;的帮助！&lt;/p&gt;
</summary><category term="linux"></category><category term="arch"></category></entry><entry><title>Nitrotasks</title><link href="http://blog.skydark.info/linux/2012/04/06/nitrotasks/" rel="alternate"></link><published>2012-04-06T00:00:00+08:00</published><author><name>Skydark Chen</name></author><id>tag:blog.skydark.info,2012-04-06:linux/2012/04/06/nitrotasks/</id><summary type="html">&lt;p&gt;最早是在 GR 里头看到的来自笨兔兔的&lt;a href="http://www.bentutu.com/2012/04/nitro-task-management-tool.html/"&gt;推荐&lt;/a&gt;，当然它也来源自&lt;a href="http://www.bentutu.com/2012/04/nitro-task-management-tool.html/"&gt;ubuntuvibes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/misc/nitrotasks.jpg" alt="Screenshot for nitrotasks"&gt;&lt;/p&gt;
&lt;p&gt;Ubuntu 用户只需要：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:cooperjona/nitrotasks &amp;amp;&amp;amp; sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install nitrotasks&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Arch 用户也只需要：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yaourt -S nitrotasks&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;就可以安装了。&lt;/p&gt;
&lt;p&gt;分别引用两边的评价和&lt;a href="http://caffeinatedco.de/apps/"&gt;开发网站的介绍&lt;/a&gt;：&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Nitro 是一款比较简易的任务管理工具，适合对时间规划和任务安排比较严谨的同学。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://nitrotasks.com/"&gt;Nitro&lt;/a&gt; is an eyecandy task manager that comes with a polished easy-to-use interface and properly organized items&lt;/p&gt;
&lt;p&gt;Nitro is an easy way to keep track of your tasks. Combining a beautifully simple interface with advanced features, Nitro stands out from the crowd.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其实 TODO 类软件确实蛮多的。Nitro 本身比较漂亮(eyecandy)也比较简洁，跨平台能力的话…… Linux &amp;amp; Chrome. 总的来说精巧够用，还是挺喜欢的。&lt;/p&gt;
&lt;p&gt;关心它其实主要因为它实现这个想法用的工具。&lt;/p&gt;
&lt;p&gt;从 AUR 安装的时候提醒我需要依赖 &lt;a href="http://code.google.com/p/pywebkitgtk/"&gt;pywebkitgtk&lt;/a&gt;.
PyWebkitGTK 的 Project Description 是这样说的：&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;PyWebKitGtk allows Python (Gtk) developers to create software on top of the WebKitGtk rendering engine.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有很多时候写了点脚本但是懒得写 GUI，
想过用 bottle 自己写一个模板生成器，
也关注过(坦白地说，其实还没开始尝试) &lt;a href="https://github.com/seomoz/shovel"&gt;shovel&lt;/a&gt;.
这些想法的原理都是自己搭建一个本地的 http 服务，然后浏览器浏览。&lt;/p&gt;
&lt;p&gt;PyWebkitGTK 则直接在前后端传递消息，不需要服务器，不需要关心 sockets，形式上更像 Ajax 的方式但并不需要真的用 Ajax，是一种更紧致的做法。
消息传递采用 json, 两边都方便处理。&lt;/p&gt;
&lt;p&gt;Nitro 使用 pickle 将数据保存在&lt;code&gt;~/.nitrodata.pkl&lt;/code&gt;, pickle 里存的是一堆 json 格式的字符串。
我一开始一看 web 界面就在想它是用什么数据库保存的，然后发现是 pickle 后觉得自己弱爆了……这个时候返璞归真才是最好的。&lt;/p&gt;
&lt;p&gt;软件作者一开始在这里有疏忽，在 js 端存储 json 的时候没有对&lt;code&gt;\n&lt;/code&gt;做转义，
导致数据中如果有回车的话，读取出来被 eval 解析的时候会发生错误。
我最初是在写了一个多行 Note 之后发现的。给作者写了封邮件，作者马上就回复并更新了，现在 1.0.2 版已经没有这个问题了。&lt;/p&gt;
&lt;p&gt;但现在整理出来思路才发现，实际上应该做转义的自然不止&lt;code&gt;\n&lt;/code&gt;一个，双引号等都是问题。
消息传递需要经过 json 包装一次因此会产生一些问题也是这种做 GUI 的思路的一个麻烦的地方吧。
总而言之我想我应该准备下一封邮件了……&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;OK, 作者已经更新了，对照了一下，在&lt;code&gt;data/media/src/js/cli.js&lt;/code&gt;里头更新的:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;escape&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;//Regexes a bunch of shit that breaks the Linux version&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;╭╮(╯▽╰)╭╮&lt;/p&gt;
</summary><category term="linux"></category></entry><entry><title>试了下arch……</title><link href="http://blog.skydark.info/linux/2011/10/14/arch/" rel="alternate"></link><published>2011-10-14T00:00:00+08:00</published><author><name>Skydark Chen</name></author><id>tag:blog.skydark.info,2011-10-14:linux/2011/10/14/arch/</id><summary type="html">&lt;p&gt;RT，因为梁鑫在旁边用Fedora跑Gnome3勾起了我的欲望
(P.S.:虽然老实说，我发现我现在自己的机子完全能假装gnome3使了……= =)，
于是昨天蛋疼地开始动手装arch……&lt;/p&gt;
&lt;p&gt;拜完Delek大后开始在虚拟机里试验，轻松愉快，而且感觉也很好，
于是晚上回宿舍一方面打给老板的report一边捣鼓……&lt;/p&gt;
&lt;p&gt;于是得到的教训是：别把虚拟机和实体机当一回事……&lt;/p&gt;
&lt;p&gt;嘛，最后就是毁了boot分区，
然后因为是自己编译的内核，用恢复盘进去chroot然后dpkg，淡定地恢复了，虚惊一场……&lt;/p&gt;
&lt;p&gt;想了想用什么DE，最后果断还是KDE了，
发现我这台机子上KDE在arch上跑的比Gnome2在Ubuntu上还舒服(虽然开机载入DE是慢些)。
pacman也挺方便的，要说不好的话就是教育网yaourt有点压力……&lt;/p&gt;
&lt;p&gt;201108版，FF7, Python2.7+3.X，压力颇大……
不过还好python2.7还是能无障碍地跑起前段时间整的remembernote的。
以后有空的时候慢慢想办法保持两个系统同步，以前那些胡写一通的脚本是该清理清理了……&lt;/p&gt;
&lt;p&gt;P.S.:于是昨天没睡觉今天竟然毫无感觉——当然我一向是延迟一天的反应速度……&lt;/p&gt;
&lt;p&gt;P.S.2:最后发给老板的是6页的E文报告，和师兄们同感的是，
"你写的果然是水啊"
"反正本来这题目就是水的不是么……"
"……倒也是……"&lt;/p&gt;
</summary><category term="linux"></category><category term="arch"></category><category term="学业"></category></entry></feed>